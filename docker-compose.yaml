networks:
 default:
   driver: bridge
   name: roboshop
   #external: true #I created network already using docker network create roboshop

volumes:
 mongodb:
 redis:
 mysql:
 rabbitmq: # docker volume create rabbitmq

services:
  mongodb:
    image: dinesh162/mongodb:v1
    container_name: mongodb
    volumes:
    - mongodb:/data/db

  catalogue:
    image: dinesh162/catalogue:v1
    container_name: catalogue
    depends_on:
    - mongodb
    
  
  redis:
    image: redis:7
    container_name: redis
    volumes:
    - redis:/data

  user:
    image: dinesh162/user:v1
    container_name: user
    depends_on:
    - redis
    - mongodb

  cart:
    image: dinesh162/cart:v1
    container_name: cart
    depends_on:
    - redis
    - catalogue

  mysql:
    image: dinesh162/mysql:v1
    container_name: mysql
    volumes:
    - mysql:/var/lib/mysql

  shipping:
    image: dinesh162/shipping:v1
    container_name: shipping
    depends_on:
    - cart
    - mysql

  rabbitmq:
    image: rabbitmq:3
    container_name: rabbitmq
    environment:
     RABBITMQ_DEFAULT_USER: rabbitmq
     RABBITMQ_DEFAULT_PASS: roboshop123
    volumes:
    - rabbitmq:/var/lib/rabbitmq

  payment:
    image: dinesh162/payment:v1
    container_name: payment
    environment:
      CART_HOST: cart
      CART_PORT: 8080
      USER_HOST: user
      USER_PORT: 8080
      AMQP_HOST: rabbitmq
      AMQP_USER: roboshop
      AMQP_PASS: roboshop123
    depends_on:
    - cart
    - user
    - rabbitmq

  frontend:
    image: dinesh162/frontend:v1
    container_name: frontend
    ports:
    - "80:80"
    depends_on:
    - catalogue
    - cart
    - user
    - payment
    - shipping






